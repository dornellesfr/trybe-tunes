{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documentos/projects-turma23/sd-023-b-project-trybetunes/src/components/MusicCard.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MusicCard extends Component {\n  constructor() {\n    super();\n\n    this.getCheck = async id => {\n      const fav = await getFavoriteSongs();\n      fav.some(m => m.trackId === id);\n      return fav;\n    };\n\n    this.saveSong = async music => {\n      this.setState({\n        loading: true\n      });\n      await addSong(music);\n      const favorites = await getFavoriteSongs();\n      this.setState(() => ({\n        loading: false,\n        fav: favorites\n      }));\n    };\n\n    this.state = {\n      loading: false,\n      fav: []\n    };\n  }\n\n  async componentDidMount() {\n    const favSongs = await getFavoriteSongs();\n    this.setState({\n      f\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      fav\n    } = this.state;\n    const {\n      musics\n    } = this.props;\n    const tracks = musics.map((music, index) => index > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Nome da m\\xFAsica:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: music.trackName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        \"data-testid\": \"audio-component\",\n        src: music.previewUrl,\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"track\", {\n          kind: \"captions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: music.trackId,\n        \"data-testid\": `checkbox-music-${music.trackId}`,\n        children: [\"Favorita\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: music.trackId,\n          onChange: () => this.saveSong(music),\n          checked: this.getCheck(music.trackId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this));\n    return loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this) : tracks;\n  }\n\n}\nMusicCard.propTypes = {\n  musics: PropTypes.shape({\n    map: PropTypes.string.isRequired\n  }).isRequired\n};","map":{"version":3,"names":["React","Component","PropTypes","addSong","getFavoriteSongs","Loading","MusicCard","constructor","getCheck","id","fav","some","m","trackId","saveSong","music","setState","loading","favorites","state","componentDidMount","favSongs","f","render","musics","props","tracks","map","index","trackName","previewUrl","propTypes","shape","string","isRequired"],"sources":["/home/fernando/Documentos/projects-turma23/sd-023-b-project-trybetunes/src/components/MusicCard.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nexport default class MusicCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      fav: [],\n    };\n  }\n\n  async componentDidMount() {\n    const favSongs = await getFavoriteSongs();\n    this.setState({\n      f\n    });\n  }\n\n  getCheck = async (id) => {\n    const fav = await getFavoriteSongs();\n    fav.some((m) => m.trackId === id);\n    return fav;\n  }\n\n  saveSong = async (music) => {\n    this.setState({\n      loading: true,\n    });\n    await addSong(music);\n    const favorites = await getFavoriteSongs();\n    this.setState(() => ({\n      loading: false,\n      fav: favorites,\n    }));\n  };\n\n  render() {\n    const { loading, fav } = this.state;\n    const { musics } = this.props;\n    const tracks = musics.map((music, index) => (\n      index > 0 && (\n        <section key={ index }>\n          <span>Nome da m√∫sica:</span>\n          <p>{ music.trackName }</p>\n          <audio data-testid=\"audio-component\" src={ music.previewUrl } controls>\n            <track kind=\"captions\" />\n            <code>audio</code>\n          </audio>\n          <label\n            htmlFor={ music.trackId }\n            data-testid={ `checkbox-music-${music.trackId}` }\n          >\n            Favorita\n            <input\n              type=\"checkbox\"\n              id={ music.trackId }\n              onChange={ () => this.saveSong(music) }\n              checked={ this.getCheck(music.trackId) }\n            />\n          </label>\n          <hr />\n        </section>\n      )));\n\n    return (\n      loading ? <Loading /> : tracks\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  musics: PropTypes.shape({\n    map: PropTypes.string.isRequired,\n  }).isRequired,\n};\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,gBAAlB,QAA0C,8BAA1C;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;EAC/CM,WAAW,GAAG;IACZ;;IADY,KAedC,QAfc,GAeH,MAAOC,EAAP,IAAc;MACvB,MAAMC,GAAG,GAAG,MAAMN,gBAAgB,EAAlC;MACAM,GAAG,CAACC,IAAJ,CAAUC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcJ,EAA9B;MACA,OAAOC,GAAP;IACD,CAnBa;;IAAA,KAqBdI,QArBc,GAqBH,MAAOC,KAAP,IAAiB;MAC1B,KAAKC,QAAL,CAAc;QACZC,OAAO,EAAE;MADG,CAAd;MAGA,MAAMd,OAAO,CAACY,KAAD,CAAb;MACA,MAAMG,SAAS,GAAG,MAAMd,gBAAgB,EAAxC;MACA,KAAKY,QAAL,CAAc,OAAO;QACnBC,OAAO,EAAE,KADU;QAEnBP,GAAG,EAAEQ;MAFc,CAAP,CAAd;IAID,CA/Ba;;IAEZ,KAAKC,KAAL,GAAa;MACXF,OAAO,EAAE,KADE;MAEXP,GAAG,EAAE;IAFM,CAAb;EAID;;EAEsB,MAAjBU,iBAAiB,GAAG;IACxB,MAAMC,QAAQ,GAAG,MAAMjB,gBAAgB,EAAvC;IACA,KAAKY,QAAL,CAAc;MACZM;IADY,CAAd;EAGD;;EAoBDC,MAAM,GAAG;IACP,MAAM;MAAEN,OAAF;MAAWP;IAAX,IAAmB,KAAKS,KAA9B;IACA,MAAM;MAAEK;IAAF,IAAa,KAAKC,KAAxB;IACA,MAAMC,MAAM,GAAGF,MAAM,CAACG,GAAP,CAAW,CAACZ,KAAD,EAAQa,KAAR,KACxBA,KAAK,GAAG,CAAR,iBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAKb,KAAK,CAACc;MAAX;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAO,eAAY,iBAAnB;QAAqC,GAAG,EAAGd,KAAK,CAACe,UAAjD;QAA8D,QAAQ,MAAtE;QAAA,wBACE;UAAO,IAAI,EAAC;QAAZ;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAOE;QACE,OAAO,EAAGf,KAAK,CAACF,OADlB;QAEE,eAAe,kBAAiBE,KAAK,CAACF,OAAQ,EAFhD;QAAA,oCAKE;UACE,IAAI,EAAC,UADP;UAEE,EAAE,EAAGE,KAAK,CAACF,OAFb;UAGE,QAAQ,EAAG,MAAM,KAAKC,QAAL,CAAcC,KAAd,CAHnB;UAIE,OAAO,EAAG,KAAKP,QAAL,CAAcO,KAAK,CAACF,OAApB;QAJZ;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF,eAmBE;QAAA;QAAA;QAAA;MAAA,QAnBF;IAAA,GAAee,KAAf;MAAA;MAAA;MAAA;IAAA,QAFW,CAAf;IAyBA,OACEX,OAAO,gBAAG,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAH,GAAiBS,MAD1B;EAGD;;AAjE8C;AAoEjDpB,SAAS,CAACyB,SAAV,GAAsB;EACpBP,MAAM,EAAEtB,SAAS,CAAC8B,KAAV,CAAgB;IACtBL,GAAG,EAAEzB,SAAS,CAAC+B,MAAV,CAAiBC;EADA,CAAhB,EAELA;AAHiB,CAAtB"},"metadata":{},"sourceType":"module"}